Java Annotations
+ JDK 5 introduced

Spring Specific Annotations 
+ Component
+ Repository - DB layer 
+ Service - Business logic layer
+ Controller - Web layer 
+ Autowired - dependency injection 

JEE Annotations
+ Named - create a bean
+ Inject - dependency injection 

Exception
=========
NoSuchBean
NoUniqueBean
BeanNotOfRequiredType

@SpringBootApplication 

XML & Annotation 
Java config & Annotation 
java config & xml 

<constructor-arg name="" type="" index="" value=""/>

Singleton - creates a single obj and cached 
Factory - any methods that generates objects for use 

production - real data real.db, admin,admin 
dev - dummy data dummy.db, user,user 

properties - file which will be key,values & it is externalized 
activate dev/production/qa

Spring bean life cycle 
BeanNameAware - change the name of the bean 
InitializingBean - after setting the properties , any beans want to be initialized 
DisposableBean - once the container is shutdown gracefully(ctx.close()), any process on bean 
PostProcessor - any behaviour to be injected in the bean before or after the initialization 

Explain bean life cycle 
Explain Methods in the life cycle interface
Explain why we need to use the bean life cycle methods 

Scenario:
100 beans in your app
in one of the bean, property check - InitilaizingBean 
1 features wanted to be added for all bean -  PostProcessor

